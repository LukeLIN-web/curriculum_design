怎么在移动硬盘中安装Linux ubuntu?

linux系统终端里下执行一个***.pl文件


运行：
./路径/文件名 （就是加个“./”符号是运行命令）
使用命令行执行某个程序的时候，Linux会到PATH环境变量的路径去搜索程序文件，但在默认情况下，Linux和Windows不同，
Windows会搜索当前目录，而Linux不会搜索当前目录，
所以在当前目录下的程序，而当前目录不再PATH环境变量中的话，就需要加上"./"来指定到当前目录下去查找应用程序了。

Unix是case sensitive大小写敏感的
文件系统
bin (binary)  放着二进制命令 sh  (shell)    data  csh

etc  等等  passwd , group

lib(library)库   C语言标准链接库

usr(user)  下面有它的bin存放usr下面用的可执行代码,也有man  ,local, local下面还有 bin,man和src(source).

dev(device ) 里面有ttya 远程终端  null
tmp(temporary) 
home  有frank,lindadb,rfunk.

/boot  启动文件
/lost +found 失物招领处, 
/misc  杂七杂八的东西
/mnt   mount 安装盘
/net   可能挂着远程的硬盘
/proc  process进程
/opt  option
/sbin  system binary 系统管理员可以执行的binary
/var variable 变量

全路径名从 /   开始, 或者 $HOME/.bashrc  ,也是从slash开始的
/ 这个符号念slash 
echo $HOME就知道了它的路径

相对路径从 . 开始 比如 ../../include/define.h

Disks mount  to positions in file tree,  mount有骑上,载上的意思
a disk partition 分 3个major sections
superblock
inodes  索引节点
data blocks 

命名规范
1.不要使用Meta characters 客服一般在印度,你要会读这些字符,
2. 鼓励用字母数字和下划线


目录命令
pwd 当前目录在哪里
cd = cd~ =cd $HOME
直接敲cd就是到$HOME了,
mkdir 创建目录 make directory
rmdir 删除目录remove directory
ls  list 列出所有文件
ls  -al  和ls -la 是一样的  所有的,all,包括以"." 开头的
ls -lt 最近的排前面,根据time排队
ls -R  recursive 递归列出,广度优先
ls -l  long 完整地列出
参数可以拼在一起, ls - al,ls -alt, 就是两个条件三个条件.

drwxr-    
- 表示ordinary file 普通文件
-l symbolic link 符号链接
-d 是目录 directory

2- 10字符是三组存取权限
前三个是user/owner的权限
中三个是 group的权限
后三个是others的权限
读写权限
access permission
r 读权限, 
w 写权限
x execute 执行权限
- no permission

第二个是number of links 第三个是 owner 第四个是group  第五个是size or device number, 第六个是修改时间,第七个是file name文件名
54 opc 85 3072 


alias al 是默认加了颜色的.
alias ls = " ls --color =auto"

命令: ctrl+ c 或者ctrl+u取消当前命令


10月22日
文本editor vi的使用
 按下a 键for append after cursor command 进入append mode 和按下i键一样 
gvim可以有可视化的软件.
可以用vimtutor来学习vim的使用
基本操作:
1. 光标在屏幕文本中的移动既可以用箭头键，也可以使用 hjkl 字母键。
         h (左移)       j (下行)       k (上行)     l (右移)

  2. 欲进入 Vim 编辑器(从命令行提示符)，请输入：vim 文件名 <回车>

  3. 欲退出 Vim 编辑器，请输入 <ESC>   :q!   <回车> 放弃所有改动。
                      或者输入 <ESC>   :wq   <回车> 保存改动。
小提示  输入 q: 可以显示历史记录.

  4. 在正常模式下删除光标所在位置的字符，请按： x

  5. 欲插入或添加文本，请输入：

         i   输入欲插入文本   <ESC>             在光标前插入文本
         A   输入欲添加文本   <ESC>             在一行后添加文本
o 可以在这一行下面开一个新行.
大写 A 在最后输入, 大写I 在开始输入.
特别提示：按下 <ESC> 键会带您回到正常模式或者撤消一个不想输入或部分完整
的命令。
好了，第一讲到此结束。下面接下来继续第二讲的内容。


删除:
dw可以删除这个单词
dd 删除当前行
D 从光标删除到这一行最后.
3 x 删除后面三个
3 X 删除前面三个(相当于加快backspace)

合并和改写:
cw  这个word change成别的
c$ 从光标到行最后开始改.
~  改变大小写.
J  合并(join)这一行和下一行.
u undo 相当于ctrl+z     undo错了可以 :redo 或者按句号键 "."
. redo

替换命令: s/word1/word2 substitution
:2,30 s/use/used  /g  2-30行 .加个g ,这一行找到的全部换; 没有g ,就替换一行找到的第一个.
:1,$  s/Oct\./Nov .  替换Oct. 换成 Nov.  从第一行到最后一行.

复制粘贴:
y4y   复制下面4行
p   粘贴

跳转查看:
^F forward 下一页,  ^B back 上一页.
^D  down下半页     ^U  up  上半页

行内跳转:
$到最后
0到最前 
^ 到第一个文字
e  到这个词末尾

寻找操作:
f a  移动到下一个字母a
/ pattern string 可以到下一个匹配的字符串.
比如/be  移动到下一个be  ,再按n就可以找到下一个be,大写的N可以往上找.
% 可以找到括号对应的上一个括号.

正则表达式: 分为三部分
anchors
character sets
modifiers

. match any single character except newline
* match 0或多个
[abc]  match a或b或c
[a-d] match 范围内
[^abc]  match (a或b或c)的补集
^exp  表达式必须出现在 行开头
exp$ 必须出现在行末
\  处理下一个character literally

比如:
xy*z     一个x,0个或多个y,一个z
^cat    cat出现在开头.
\*         任何*的出现
[cC]at  cat 或Cat
[^a-zA-Z] 所有非alphabetic的character
[0-9]$  所有以数字结尾的line
[A-Z][A-Z]* 一个或多个大写字母
[A-Z]* 零个或多个大写字母

重定向

bash里面
>>!  or  >|   重定向到file
>>   apppend to file
<   从 file  input 
|  pipe output 到另一个命令
tee 重复标准输出,流到多个地方
ls -l | tee lslist   在屏幕上显示,同时信息流入文件.
丢弃输出   > /dev/null  

2>errfile 把错误信息定向到文件.


csh里则是多一个&
>& file  重定向到file
>>& file   apppend to file
|&  pipe output 到另一个命令

command  &  在后台执行
&&  前面的完成了后执行命令一
||   前面的失败了后执行命令一

'' 单引号中不需要特殊含义,全部视为字符串
"" 双引号中除了$和\取特殊含义,其他都视为字符串

加 & 让他在后台运行
bg  继续运行后台的job
^z  暂停
jobs 观察任务
fg  3  控制台 由任务3 占领

ps -ef  or ps -aux 看整个系统的process status

top 动态查看ps
pstree 进程树
uptime tell 系统运行了多久.